NAME
    daifuku - transaction logging in JSON, within the MySQL database

SYNOPSIS
        # print stored procedures / triggers for the tables
        daifuku dbname tblname1 tblname2 ... > setup.sql

        # install the procedures and triggers
        mysql -u root dbname < setup.sql

        # to record the log, issue the following sequence of SQL
        BEGIN;                          -- start a transaction
        CALL daifuku_begin('any text'); -- activate logging of the transaction
        ...                             -- issue statements
        COMMIT;                         -- commit the transaction

        # log is stored in the `myfuku_log` table
        SELECT * FROM myfuku_log;

DESCRIPTION
    Daifuku generates stored procedures / triggers for logging the changes
    made through the transactions.

    The log is collected in the daifuku_log table in JSON format, so that it
    would be easy to use the log for whatever purpose (e.g. for audit, undo,
    display, etc.).

COMMAND OPTIONS
  --host=host
  --port=port
  --socket=socket-file
    override the default server location specified in "my.cnf"

  --user=username
    username to be used for connecting to the database (default: `root`)

  --pass=password
    password to be used for connecting to the database (default: none)

  --help
    prints help

  --version
    prints the version number

STORED PROCEDURES
  daifuku_begin(info)
    The function instructs the triggers to log the current transaction. Upon
    return, the id of the row within the daifuku_log table in which the
    transaction will be logged is stored in the @daifuku_id user variable.
    Arbitrary text can be passed as an argument, which would be stored in
    the `info` column of the daifuku_log table.

    The function cannot be used outside of a transaction.

  daifuku_is_active()
    Returns 1 if daifuku_begin() has been called for the current
    transaction, or 0 if otherwise.

AUTHOR
    Kazuho Oku

LICENSE
    The software is licensed under the MIT license.

